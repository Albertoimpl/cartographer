# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

apiVersion: carto.run/v1alpha1
kind: ClusterRunTemplate
metadata:
  name: testing
spec:
  completion:
    succeeded: {key: 'status.conditions.#(type=="Succeeded").status', value: "True"}
    failed:    {key: 'status.conditions.#(type=="Succeeded").status', value: "False"}

  template:
    apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: $(pipeline.metadata.name)$-
    spec:
      pipelineRef: {name: testing}
      params:
        - name: source-url
          value: $(pipeline.spec.inputs.url)$
        - name: source-revision
          value: $(pipeline.spec.inputs.revision)$

---
apiVersion: carto.run/v1alpha1
kind: ClusterRunTemplate
metadata:
  name: git-writer
spec:
  template:
    apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      generateName: $(pipeline.metadata.name)$-
    spec:
      serviceAccountName: $(pipeline.spec.inputs.serviceAccount)$
      taskRef:
        name: git-writer
      params:
        - name: FILES
          value: $(pipeline.spec.inputs.files)$
        - name: GIT_SERVER
          value: $(pipeline.spec.inputs.git_server)$
        - name: GIT_PORT
          value: $(pipeline.spec.inputs.git_port)$
        - name: GIT_REPO
          value: $(pipeline.spec.inputs.git_repo)$
        - name: GIT_BRANCH
          value: $(pipeline.spec.inputs.git_branch)$
        - name: GIT_USER_EMAIL
          value: $(pipeline.spec.inputs.git_user_email)$
        - name: GIT_USER_NAME
          value: $(pipeline.spec.inputs.git_user_name)$
        - name: GIT_MESSAGE
          value: $(pipeline.spec.inputs.git_message)$
