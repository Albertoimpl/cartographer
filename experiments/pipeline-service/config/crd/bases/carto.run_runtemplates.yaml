# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: runtemplates.carto.run
spec:
  group: carto.run
  names:
    kind: RunTemplate
    listKind: RunTemplateList
    plural: runtemplates
    singular: runtemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              completion:
                description: Completion describe rules for determining whether the
                  invocation was successfull, failed, or is still running (neither
                  succeeded nor failed).
                properties:
                  failed:
                    description: Failed provides the rule to evaluate to determine
                      if the invocation succeeded or failed.
                    properties:
                      key:
                        description: Key is the gjson query the perform to retrieve
                          an indication of success/failure.
                        type: string
                      value:
                        description: Value is the expected result to indicate success/failure.
                        type: string
                    type: object
                  succeeded:
                    description: Succeeded provides the rule to evaluate to determine
                      if the invocation succeeded or failed.
                    properties:
                      key:
                        description: Key is the gjson query the perform to retrieve
                          an indication of success/failure.
                        type: string
                      value:
                        description: Value is the expected result to indicate success/failure.
                        type: string
                    type: object
                type: object
              outputs:
                description: Outputs lets you specify rules for capturing results
                  from the pipeline invocations.
                items:
                  properties:
                    name:
                      description: Name indicates the value that should be used as
                        a key in the `carto.run/Pipeline`'s .status.latestOutputs.
                      type: string
                    path:
                      description: Path denotes the query that should be performed
                        to retrieve a value from the object stamped out according
                        to this RunTemplate template.
                      type: string
                  required:
                  - name
                  - path
                  type: object
                type: array
                x-kubernetes-preserve-unknown-fields: true
              template:
                description: "Template is the template that should be stamped out
                  when submitting a new pipeline invocation. \n To this template are
                  made available: \n \t- the pipeline object that is referencing this
                  RunTemplate \t- (optional) the object that matched the Pipeline's
                  selection rules. \n For instance: \n \tkind: ConfigMap \tapiVersion:
                  v1 \tmetadata: \t  generateName: $(pipeline.metadata.name)- \tdata:
                  \t  foo: $(selected.metadata.name)"
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - template
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
