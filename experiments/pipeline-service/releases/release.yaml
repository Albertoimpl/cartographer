# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: pipeline-service-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-service-controller
  namespace: pipeline-service-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipeline-service-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: pipeline-service-controller
    namespace: pipeline-service-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline-service-controller
  namespace: pipeline-service-system
spec:
  selector:
    matchLabels:
      app: pipeline-service-controller
  replicas: 1
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: pipeline-service-controller
    spec:
      serviceAccount: pipeline-service-controller
      containers:
        - name: pipeline-service-controller
          image: projectcartographer/controller-d632d1c5254f292a1dd64c68fcb09b9f@sha256:e123b43556d09cc420a67bed61ea3806034031506de87fe096c0cc905b85bff5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: pipelines.carto.run
spec:
  group: carto.run
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
          name: Succeeded
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                inputs:
                  description: Inputs define the parameters that should be passed onto the run template. The contents of this field are used to provide idempotency for the reconciler, being used to define a digest that's compared before creating a new run.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                runTemplateName:
                  description: RunTemplateName is the name of the RunTemplate object to use to dictate how to run an instance of a pipeline.
                  type: string
                selector:
                  description: Selector is used for matching against an object to be accessible for templating a Run (for instance, finding out the name of a developer-provided tekton/Pipeline, or a ConfigMap to be embedded in).
                  properties:
                    matchingLabels:
                      additionalProperties:
                        type: string
                      description: MatchingLabels indicates the label set to use when searching for objects of a given gvr.
                      minProperties: 1
                      type: object
                    resource:
                      description: Resource indicates a GVR to match against.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                      required:
                        - apiVersion
                        - kind
                      type: object
                  required:
                    - matchingLabels
                    - resource
                  type: object
              required:
                - inputs
                - runTemplateName
              type: object
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                latestInputs:
                  description: LatestInputs represents the set of inputs that were used the last time that this reconciler observed a success for a run that it created.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                latestOutputs:
                  description: LatestOutputs displays the set of outputs that were produced in the last time that this reconciler observed a success for a run that it created.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - conditions
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: runtemplates.carto.run
spec:
  group: carto.run
  names:
    kind: RunTemplate
    listKind: RunTemplateList
    plural: runtemplates
    singular: runtemplate
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                completion:
                  description: Completion describe rules for determining whether the invocation was successfull, failed, or is still running (neither succeeded nor failed).
                  properties:
                    failed:
                      description: Failed provides the rule to evaluate to determine if the invocation succeeded or failed.
                      properties:
                        key:
                          description: Key is the gjson query the perform to retrieve an indication of success/failure.
                          type: string
                        value:
                          description: Value is the expected result to indicate success/failure.
                          type: string
                      type: object
                    succeeded:
                      description: Succeeded provides the rule to evaluate to determine if the invocation succeeded or failed.
                      properties:
                        key:
                          description: Key is the gjson query the perform to retrieve an indication of success/failure.
                          type: string
                        value:
                          description: Value is the expected result to indicate success/failure.
                          type: string
                      type: object
                  type: object
                outputs:
                  description: Outputs lets you specify rules for capturing results from the pipeline invocations.
                  items:
                    properties:
                      name:
                        description: Name indicates the value that should be used as a key in the kontinue/Pipeline .status.latestOutputs.
                        type: string
                      path:
                        description: Path denotes the query that should be performed to retrieve a value from the object stamped out according to this RunTemplate template.
                        type: string
                    required:
                      - name
                      - path
                    type: object
                  type: array
                  x-kubernetes-preserve-unknown-fields: true
                template:
                  description: "Template is the template that should be stamped out when submitting a new pipeline invocation. \n To this template are made available: \n \t- the pipeline object that is referencing this RunTemplate \t- (optional) the object that matched the Pipeline's selection rules. \n For instance: \n \tkind: ConfigMap \tapiVersion: v1 \tmetadata: \t  generateName: $(pipeline.metadata.name)- \tdata: \t  foo: $(selected.metadata.name)"
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - template
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
